%\VignetteIndexEntry{Data day}
%\VignetteEngine{R.rsp::tex}

\documentclass[xcolor=dvipsnames, aspectratio=1610, 9pt]{beamer}
\usepackage[utf8]{inputenc}
\usepackage[UKenglish]{babel}
\usepackage{ragged2e}%pour justifier le text, apr√®s il suffit de tapper \justifying avant le paragraphe
\setbeamertemplate{navigation symbols}{}%no nav symbols
\usetheme[secheader]{Madrid}%

\title{Using data in R test}
\author[Alexandre Courtiol]{Alexandre Courtiol}
\institute[IZW]{Leibniz Institute of Zoo and Wildlife Research}%
\date[June 2018]{\small June 2018}%

\begin{document}
\setlength{\topsep}{1pt}%space between input and output
<<echo = FALSE, message = FALSE>>=
options(width = 60)
library(knitr)
opts_chunk$set("size" = "scriptsize")
library(dplyr)
@

\maketitle


\begin{frame}[containsverbatim]{Changing the order of levels of a factor}
<<echo = FALSE>>=
my_factor1 <- factor(c("A", "A", "B", "B", "C"))
my_factor2 <- factor(c("A", "A", "B", "B", "C"), levels = c("C", "B", "A"))
@

\begin{columns}
\column{0.2\linewidth}
\begin{center}
You have:
<<>>=
my_factor1
@
\end{center}

\column{0.2\linewidth}
\begin{center}
You want:
<<>>=
my_factor2
@
\end{center}
\end{columns}

\begin{columns}
\column{0.5\linewidth}

\begin{center}
You do:
<<>>=
## Using base:
my_factor2 <- factor(my_factor1, levels(my_factor1)[c(3, 2, 1)])
my_factor2
@

\end{center}
\end{columns}
\vfill

Note:

the order of levels influences the output of linear models and plotting functions (e.g. order in the legend of a ggplot) \dots
\end{frame}

\begin{frame}[containsverbatim]{Changing the levels of a factor}
<<echo = FALSE>>=
my_factor1 <- factor(c("A", "A", "B", "B", "C"))
my_factor2 <- factor(c("A", "A", "A", "A", "D"))
@

\begin{columns}
\column{0.2\linewidth}
\begin{center}
You have:
<<>>=
my_factor1
@
\end{center}

\column{0.2\linewidth}
\begin{center}
You want:
<<>>=
my_factor2
@
\end{center}
\end{columns}

\begin{columns}
\column{0.5\linewidth}

\begin{center}
You do:
<<>>=
## Using base:
levels(my_factor1)
my_factor2 <- my_factor1
levels(my_factor2) <- c("A", "A", "D") ## in same order!
my_factor2
@

<<>>=
## Using dplyr:
my_factor2 <- recode(my_factor1, A = "A", B = "A", C = "D")
my_factor2
@
\end{center}
\end{columns}

\end{frame}

\end{document}
